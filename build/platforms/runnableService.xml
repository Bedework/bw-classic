<?xml version="1.0"?>

<!-- ===================================================================
     This file is imported by platform specific build files to force the build
     of a runnable form. It adds the targets:
        runnableDoHibProps: builds a set of properties for the service
        runnableAddLibs: add libraries for this platform
        runnableAddResources: add anything we want in the resources directory 
        runnableAddExtras: add scripts for runnable versions
        runnableDeployService: deploy the service
     =================================================================== -->

<project name="bedework.runnableService" default="runnableDoHibProps" >
  <target name="runnableDoHibProps" >
    <echo file="${app.dest.classes}/hibernate.properties">
hibernate.query.substitutions true 'T', false 'F', yes 'Y', no 'N'
hibernate.dialect=${org.bedework.global.hibernate.dialect}
hibernate.connection.driver_class=${org.bedework.global.jdbcdriver}
hibernate.connection.username=${org.bedework.global.jdbcid}
hibernate.connection.password=${org.bedework.global.jdbcpw}
hibernate.connection.url=${org.bedework.global.jdbcurl}
hibernate.bytecode.use_reflection_optimizer=false
hibernate.cache.use_second_level_cache=false
#
# Here for better debugging
#
hibernate.jdbc.batch_size=0
    </echo>
  </target>
	
  <!-- ================================================================
       Add libraries
       ================================================================ -->

  <target name="runnableAddLibs">
    <!-- hibernate jars -->
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.antlr}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.asm-attrs}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.asm}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.cglib}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.dom4j}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.ehcache}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.hibernate}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.javassist}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.jgroups}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.jta}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.commons-collections}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.slf4j-api}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.slf4j-log4j12}" />

    <!-- jms support -->
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.activemq-core}" />
    <copy todir="${app.dest.lib}"
          file="${org.bedework.appjar.geronimo-j2ee-management_1.0_spec}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.jms}" />

    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.commons-logging}"/>

    <!-- core files -->

    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.rpiaccess}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.rpiutil}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-davio}" />

    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-annotations}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-apiutil}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-calcore}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-calcorei}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-calfacade}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-calsvc}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-calsvci}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-icalendar}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-logging}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-mail}" />
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.bw-sysevents}" />

    <!-- any extra files-->
   <copy todir="${app.dest.lib}" >
     <fileset dir="${org.bedework.temp.extrajars.dir}" />
   </copy>

    <!-- Some more standard libs -->
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.log4j}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.lucene-core}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.lucene-misc}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.backport-util-concurrent}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.ical4j}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.ical4j-vcard}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.commons-codec}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.commons-digester}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.commons-httpclient}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.commons-lang}"/>
    <copy todir="${app.dest.lib}" file="${org.bedework.appjar.commons-ssl}"/>

    <!-- jdbc stuff -->

    <if>
      <available file="${org.bedework.global.ext.lib}/jdbc" type="dir" />
      <then>
        <!-- jdbc drivers -->
        <copy todir="${app.dest.lib}" flatten="yes" >
          <!-- local jdbc drivers -->
          <fileset dir="${org.bedework.global.ext.lib}/jdbc">
            <include name="*.jar"/>
          </fileset>
        </copy>
      </then>
      <else>
        <!-- Include the quickstart jdbc driver -->
        <copy todir="${app.dest.lib}" file="${org.bedework.appjar.hsqldb}"/>
      </else>
    </if>
  </target>
  
  <!-- ================================================================
       Add resources
       ================================================================ -->

  <target name="runnableAddResources">
    <property name="app.dest.resources"
              location="${app.dest.home}/resources" />
  	
    <mkdir dir="${app.dest.resources}"/>

    <copy tofile="${app.dest.resources}/log4j.xml"
          file="${org.bedework.runsh.log4j.xml}"
          failonerror="false" />
	</target>
  
  <!-- ================================================================
       Add extras
       ================================================================ -->

  <target name="runnableAddExtras">
    <!-- ===============================================================
                       Build the classpath
         =============================================================== -->

    <path id="app.run.path">
      <fileset dir="${app.dest.lib}">
        <include name="*.jar"/>
      </fileset>
      <pathelement location="${app.dest.resources}" />
    </path>
    <pathconvert property="app.run.cp" refid="app.run.path"
                 targetos="unix" >
      <map from="${app.dest.lib}" to="./lib"/>
      <map from="${app.dest.resources}" to="./resources"/>
    </pathconvert>
    <pathconvert property="app.run.wincp" refid="app.run.path"
                 targetos="windows" >
      <map from="${app.dest.lib}" to="./lib"/>
      <map from="${app.dest.resources}" to="./resources"/>
    </pathconvert>

    <!-- ===============================================================
                       Copy and modify the shell script
         =============================================================== -->

    <copy tofile="${app.dest.home}/${propval.app.shellscr.name}"
          file="${app.run.shellscr}" >
      <filterset>
        <filter token="CP"
                value=".:./classes:${app.run.cp}"/>
      </filterset>
      <filterset refid="property.filters" />
    </copy>

    <copy tofile="${app.dest.home}/${propval.app.batscr.name}"
          file="${app.run.batscr}" >
      <filterset>
        <filter token="CP"
                value=".;./classes;${app.run.wincp}"/>
      </filterset>
      <filterset refid="property.filters" />
    </copy>

    <!-- build the zip file -->
    <mkdir dir="${dist.home}" />
    <delete file="${app.zip.file}" />

    <zip destfile="${app.zip.file}" >
      <zipfileset prefix="${propval.app.zip.name}" dir="${app.dest.home}" />
    </zip>
  </target>
  
  <!-- ================================================================
       Deploy the service
       ================================================================ -->

  <target name="runnableDeployService">
    <!-- Nothing to do for runnable services -->
  </target>
</project>