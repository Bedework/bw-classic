<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<!-- ===================================================================
     An Event in Bedework.
     =================================================================== -->

<hibernate-mapping>
  <class name="org.bedework.calfacade.BwEventObj"
         table="events">
    <id name="id" type="integer" column="eventid" unsaved-value="-1">
      <generator class="native"/>
    </id>

    <version name="seq" column="seq" type="integer" />

    <many-to-one name="creator"
                 class="org.bedework.calfacade.BwUser" >
      <column name="creatorid" not-null="true" index="idx_event_creator" />
    </many-to-one>

    <many-to-one name="owner"
                 class="org.bedework.calfacade.BwUser"
                 unique="true">
      <column name="ownerid" not-null="true"
              index="sidx_event_owner" />
    </many-to-one>

    <property name="access" column="access" type="text" />

    <property name="publick" type="true_false" >
      <column name="publick" not-null="true" />
    </property>

    <component name="dtstart"
               class="org.bedework.calfacade.BwDateTime" >
      <property name="dateType" column="start_date_type" type="true_false"
                not-null="true" />
      <property name="tzid" column="start_tzid" type="string" />
      <property name="dtval" column="start_dtval" type="string"
                not-null="true" />
      <property name="date" column="start_date" type="string"
                not-null="true"
                index="idx_event_start" />
    </component>

    <!-- All day events and events which end when they start have no
         end date/time -->
    <component name="dtend"
               class="org.bedework.calfacade.BwDateTime" >
      <property name="dateType" column="end_date_type" type="true_false" />
      <property name="tzid" column="end_tzid" type="string" />
      <property name="dtval" column="end_dtval" type="string" />
      <property name="date" column="end_date" type="string"
                index="idx_event_end" />
    </component>

    <property name="duration" column="duration" type="string" />

    <property name="endType" column="end_type" type="char"
              not-null="true" />

    <property name="deleted" type="true_false">
      <column name="deleted" not-null="true"
              index="idx_event_deleted" />
    </property>

    <property name="summary" type="string" >
      <column name="summary" not-null="true" />
    </property>
    <property name="description" column="description" type="text"/>

    <property name="link" column="link" type="string" />

    <property name="status" type="string" />

    <property name="cost" column="cost" type="string"/>

    <many-to-one name="organizer"
                 class="org.bedework.calfacade.BwOrganizer"
                 column="organizerid"
                 cascade="all,delete-orphan"
                 unique="true"
                 not-null="false" />

    <many-to-one name="calendar"
                 class="org.bedework.calfacade.BwCalendar"
                 column="calendarid"
                 not-null="false"
                 index="idx_event_calendar" />
    <!-- not-null should be true above - but the restore code needs
         changing to write events with the calendar filled in. -->

    <property name="dtstamp" column="dtstamp" type="string" />

    <property name="lastmod" type="string" >
      <column name="lastmod" not-null="true" />
    </property>

    <property name="created" type="string">
      <column name="created" not-null="true" />
    </property>

    <property name="priority" type="integer" >
      <column name="priority" not-null="true" />
    </property>

    <many-to-one name="sponsor"
                 class="org.bedework.calfacade.BwSponsor" >
      <column name="sponsorid" index="esi" />
    </many-to-one>

    <many-to-one name="location"
                 class="org.bedework.calfacade.BwLocation" >
      <column name="locationid" index="eli" />
    </many-to-one>

    <property name="name" column="eventname" type="text"/>

    <!-- ownerid + guid + sequence + recurrence-id is a unique key. -->
    <property name="guid" type="text" unique-key="event-key" />

    <property name="sequence" type="integer" unique-key="event-key" />

    <property name="transparency" column="transparency" type="text"/>

    <property name="categoriesChanged" type="true_false">
      <column name="categories_changed" not-null="true" />
    </property>

    <set name="categories" table="event_categories"
         lazy="true" >
      <key column="eventid"/>
      <many-to-many class="org.bedework.calfacade.BwCategory"
                    column="categoryid"/>
    </set>

    <property name="attendeesChanged" type="true_false">
      <column name="attendees_changed" not-null="true" />
    </property>

    <set name="attendees" table="event_attendees"
         cascade="all-delete-orphan" >
      <key column="attendeeid"/>
      <many-to-many class="org.bedework.calfacade.BwAttendee" />
    </set>

    <!-- We don't map the alarms because generally we have to fetch them
         based on critera we cannot derive from the event.

         Generally we only fetch the alarms for a given event and the
         curremt user.
    <set name="alarms" table="event_alarms"
         lazy="true"
         cascade="all-delete-orphan" >
      <key column="eventid" />
      <many-to-many class="org.bedework.calfacade.BwEventAlarm"
                    column="id"/>
    </set>
         -->

    <property name="recurring" type="true_false" column="recurring" not-null="true"
              index="idx_event_recurring" />

    <property name="recurrenceChanged" type="true_false">
      <column name="recurrence_changed" not-null="true" />
    </property>

    <component name="recurrence"
               class="org.bedework.calfacade.BwRecurrence" >
      <set name="rrules" lazy="true" table="eventrrules"
           cascade="all,delete-orphan">
        <key column="eventid"/>
        <element type="string" column="rrule" not-null="true"/>
      </set>

      <set name="rdates" lazy="true" table="eventrdates"
           cascade="all,delete-orphan">
        <key column="eventid"/>
        <element type="string" column="rdate" not-null="true"/>
      </set>

      <set name="exdates" lazy="true" table="eventexdates"
           cascade="all,delete-orphan">
        <key column="eventid"/>
        <element type="string" column="exdate" not-null="true"/>
      </set>

      <property name="recurrenceId" column="recurrence_id" type="string"
                unique-key="event-key" />

      <property name="latestDate" column="latest_date" type="string"
                index="idx_event_latest_date" />

      <property name="expanded" type="true_false" column="expanded" not-null="true"
                index="idx_event_expanded" />
    </component>
  </class>

  <!-- =================================================================
       Event queries
       ================================================================= -->

  <query name="eventsByName"><![CDATA[
    from org.bedework.calfacade.BwEventObj as ev
      where ev.name = :name and ev.calendar = :cal
  ]]></query>

  <!-- Use this to see if a guid exists. The count should be zero or one -->
  <query name="getGuidCount"><![CDATA[
    select count(*) from org.bedework.calfacade.BwEventObj as ev
      where ev.guid = :guid
  ]]></query>
</hibernate-mapping>

