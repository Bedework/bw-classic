<?xml version="1.0"?>

<!-- This is the ant build file for the bedework Calendar quickstart.

     It is imported by the quickstart build.xml ensuring all changes to this file
     appear in the repository.

     Authors: Mike Douglass   douglm@rpi.edu
-->

<project name="quickstart-build-file" default="usage" basedir=".">
  <property environment="env"/>

  <property name="org.bedework.project.access"
            location="${basedir}/access" />

  <property name="org.bedework.project.caldav"
            location="${basedir}/caldav" />

  <property name="org.bedework.project.caldavTest"
            location="${basedir}/caldavTest" />

  <property name="org.bedework.calendar.dir"
            location="${basedir}/calendar3" />

  <property name="org.bedework.project.calendar"
            location="${basedir}/calendar3" />

  <property name="org.bedework.project.davutil"
            location="${basedir}/davutil" />

  <property name="org.bedework.project.dumprestore"
            location="${basedir}/dumprestore" />

  <property name="org.bedework.project.freebusy"
            location="${basedir}/freebusy" />

  <property name="org.bedework.project.rpiutil"
            location="${basedir}/rpiutil" />

  <property name="org.bedework.project.webdav"
            location="${basedir}/webdav" />

  <target name="README" depends="init"
          description="Describe targets and their usage">
    <loadfile property="org.bedework.README" srcFile="${org.bedework.calendar.dir}/docs/README"/>
    <echo message="${org.bedework.README}" />
  </target>

  <target name="usage" depends="init"
          description="Describe targets and their usage">
    <echo message="As distributed the package should be ready to go."/>
    <echo message="Ensure ant is on your path, (a version is in the" />
    <echo message="package)"/>
    <echo message=""/>
    <echo message="First in one window do"/>
    <echo message="    ant hsqldb"/>
    <echo message="This will start the hsqldb server ready for the "/>
    <echo message="application."/>
    <echo message=""/>
    <echo message="In another window do"/>
    <echo message="    ant tomcatstart"/>
    <echo message=""/>
    <echo message="Once tomcat is running you should be able to go to a"/>
    <echo message="browser and connect to"/>
    <echo message="    http://localhost:8080/bedework"/>
    <echo message="and follow the instructions."/>
    <echo message=""/>
    <echo message="To build the calendar do"/>
    <echo message="    ant deploy    or "/>
    <echo message="    ant deploy.debug "/>
    <echo message="which does a build and deploy of all components"/>
    <echo message=""/>
    <echo message="To rebuild the calendar do"/>
    <echo message="    ant clean.deploy    or "/>
    <echo message="    ant clean.deploy.debug "/>
    <echo message="which does a clean, build and deploy of all components"/>
    <echo message=""/>
    <echo message="See documentation in the docs directory or on bedework.org"/>
    <echo message="for instructions on creating a locally configured calendar application"/>
    <echo message=""/>
  </target>

   <!-- The only properties set below should be those directly used to
        invoke the targets below, in this file.
        Do not set properties here for tasks invoked in other build
        files.  Instead, make sure the targets work in calendar/build.xml,
        then invoke ant on the task in calendar/build.xml.

        For an example, of invoking ant on another build file,
        see the deploy target, below.
     -->
  <target name="init" >
    <dirname property="quickstart.dir" file="${ant.file}"/>

    <property name="calendar.build.file"
              location="${org.bedework.calendar.dir}/build.xml" />

    <property name="org.bedework.freebusy.build.file"
              location="${org.bedework.project.freebusy}/build.xml" />

    <!-- Overriding this when invoking ant allows different user property
         files to be included e.g.
            ant -Dorg.bedework.user.build.properties=/home/me/bedework.properties ...
            -->
    <property name="org.bedework.user.build.properties"
              location="${user.home}/bedework.build.properties" />

    <echo message="Load user properties from ${org.bedework.user.build.properties}" />

    <!-- Load user property definition overrides -->
    <property file="${org.bedework.user.build.properties}" />

    <!-- ===============================================================
              Default properties.
         =============================================================== -->

    <property name="org.bedework.defaultdefs.properties"
              location="${org.bedework.calendar.dir}/bldfiles/defaultDefs.properties"/>

    <property name="org.bedework.calendar.dist"
              location="${org.bedework.calendar.dir}/dist"/>

    <property name="org.bedework.build.caldav" value="yes" />

    <condition property="org.bedework.qs.build.caldav">
      <equals arg1="yes" arg2="${org.bedework.build.caldav}"/>
    </condition>

    <property name="org.bedework.build.freebusy" value="no" />

    <condition property="org.bedework.qs.build.freebusy">
      <equals arg1="yes" arg2="${org.bedework.build.freebusy}"/>
    </condition>

    <!-- ===============================================================
              Default properties.
         =============================================================== -->
    <property file="${org.bedework.defaultdefs.properties}" />

    <property name="sync4j.dir"
              location="${basedir}/Sync4j2.2b3" />
  </target>

  <!-- =================================================================
       Targets to build sub-projects and copy the results into a common library
       (for the moment use the calendar lib as the common library)
       ================================================================= -->

  <!-- .................................................................
                          access
       .................................................................. -->
  <target name="build.access" depends="init"
          description="builds the access project">
    <ant antfile="${org.bedework.project.access}/build.xml" inheritrefs="true"
           target="build-all" />

    <antcall target="copy.access" inheritrefs="true" />
  </target>

  <target name="clean.build.access" depends="init"
          description="builds the access project">
    <ant antfile="${org.bedework.project.access}/build.xml" inheritrefs="true"
           target="clean-build-all" />

    <antcall target="copy.access" inheritrefs="true" />
  </target>

  <target name="copy.access" >
    <copy todir="${org.bedework.project.caldav}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.access}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.calendar}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.access}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.davutil}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.access}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.dumprestore}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.access}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.webdav}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.access}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>
  </target>

  <!-- .................................................................
                          caldav
       .................................................................. -->
  <target name="build.caldav" depends="init"
          description="builds the caldav project">
    <ant antfile="${org.bedework.project.caldav}/build.xml" inheritrefs="true"
           target="build-all" />

    <antcall target="copy.caldav" inheritrefs="true" />
  </target>

  <target name="clean.caldav" depends="init"
          description="clean the caldav project">
    <ant antfile="${org.bedework.project.caldav}/build.xml" inheritrefs="true"
           target="clean" />
  </target>

  <target name="clean.build.caldav" depends="init"
          description="builds the caldav project">
    <ant antfile="${org.bedework.project.caldav}/build.xml" inheritrefs="true"
           target="clean-build-all" />
  </target>

  <target name="copy.caldav" >
    <copy todir="${org.bedework.calendar.dist}" overwrite="yes" failonerror="false" >
      <fileset dir="${org.bedework.project.caldav}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>
  </target>

  <!-- .................................................................
                          caldavTest
       .................................................................. -->
  <target name="build.caldavTest" depends="init"
          description="builds the caldavTest project">
    <ant antfile="${org.bedework.project.caldavTest}/build.xml" inheritrefs="true"
           target="build-all" />
  </target>

  <target name="clean.caldavTest" depends="init"
          description="clean the caldavTest project">
    <ant antfile="${org.bedework.project.caldavTest}/build.xml" inheritrefs="true"
           target="clean" />
  </target>

  <target name="clean.build.caldavTest" depends="init"
          description="builds the caldavTest project">
    <ant antfile="${org.bedework.project.caldavTest}/build.xml" inheritrefs="true"
           target="clean-build-all" />
  </target>

  <!-- .................................................................
                          davutil
       .................................................................. -->
  <target name="build.davutil" depends="init"
          description="builds the davutil project">
    <ant antfile="${org.bedework.project.davutil}/build.xml" inheritrefs="true"
           target="build-all" />

    <antcall target="copy.davutil" inheritrefs="true" />
  </target>

  <target name="clean.build.davutil" depends="init"
          description="builds the davutil project">
    <ant antfile="${org.bedework.project.davutil}/build.xml" inheritrefs="true"
           target="clean-build-all" />

    <antcall target="copy.davutil" inheritrefs="true" />
  </target>

  <target name="copy.davutil" >
    <copy todir="${org.bedework.project.caldavTest}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.davutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.caldav}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.davutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.calendar}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.davutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.webdav}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.davutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>
  </target>

  <!-- .................................................................
                          dumprestore
       .................................................................. -->
  <target name="build.dumprestore" depends="init"
          description="builds the dumprestore project">
    <ant antfile="${org.bedework.project.dumprestore}/build.xml" inheritrefs="true"
           target="build-all" />
  </target>

  <target name="clean.dumprestore" depends="init"
          description="clean the dumprestore project">
    <ant antfile="${org.bedework.project.dumprestore}/build.xml" inheritrefs="true"
           target="clean" />
  </target>

  <target name="clean.build.dumprestore" depends="init"
          description="builds the dumprestore project">
    <ant antfile="${org.bedework.project.dumprestore}/build.xml" inheritrefs="true"
           target="build-all" />
  </target>

  <!-- .................................................................
                          freebusy
       .................................................................. -->
  <target name="build.freebusy" depends="init"
          description="builds the freebusy project">
    <ant antfile="${org.bedework.project.freebusy}/build.xml" inheritrefs="true"
           target="build-all" />

    <antcall target="copy.freebusy" inheritrefs="true" />
  </target>

  <target name="clean.build.freebusy" depends="init"
          description="builds the freebusy project">
    <ant antfile="${org.bedework.project.freebusy}/build.xml" inheritrefs="true"
           target="build-all" />

    <antcall target="copy.freebusy" inheritrefs="true" />
  </target>

  <target name="copy.freebusy" >
    <copy todir="${org.bedework.calendar.dist}" overwrite="yes">
      <fileset dir="${org.bedework.project.freebusy}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>
  </target>

  <!-- .................................................................
                          rpiutil
       .................................................................. -->
  <target name="build.rpiutil" depends="init"
          description="builds the rpiutil project">
    <ant antfile="${org.bedework.project.rpiutil}/build.xml" inheritrefs="true"
           target="build-all" />

    <antcall target="copy.rpiutil" inheritrefs="true" />
  </target>

  <target name="clean.build.rpiutil" depends="init"
          description="builds the rpiutil project">
    <ant antfile="${org.bedework.project.rpiutil}/build.xml" inheritrefs="true"
           target="clean-build-all" />

    <antcall target="copy.rpiutil" inheritrefs="true" />
  </target>

  <target name="copy.rpiutil" >
    <copy todir="${org.bedework.project.access}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.rpiutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.caldav}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.rpiutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.calendar}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.rpiutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.davutil}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.rpiutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.freebusy}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.rpiutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.project.webdav}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.rpiutil}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>
  </target>

  <!-- .................................................................
                          webdav
       .................................................................. -->
  <target name="build.webdav" depends="init"
          description="builds the webdav project">
    <ant antfile="${org.bedework.project.webdav}/build.xml" inheritrefs="true"
           target="build-all" />

    <antcall target="copy.webdav" inheritrefs="true" />
  </target>

  <target name="clean.build.webdav" depends="init"
          description="builds the webdav project">
    <ant antfile="${org.bedework.project.webdav}/build.xml" inheritrefs="true"
           target="clean-build-all" />

    <antcall target="copy.webdav" inheritrefs="true" />
  </target>

  <target name="clean.webdav" depends="init"
          description="cleans the webdav project">
    <ant antfile="${org.bedework.project.webdav}/build.xml" inheritrefs="true"
           target="clean" />
  </target>

  <target name="copy.webdav" >
    <copy todir="${org.bedework.project.caldav}/lib" overwrite="yes">
      <fileset dir="${org.bedework.project.webdav}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>

    <copy todir="${org.bedework.calendar.dist}" overwrite="yes">
      <fileset dir="${org.bedework.project.webdav}/dist">
        <include name="*.jar" />
      </fileset>
    </copy>
  </target>

  <!-- =================================================================
       The "build" target builds the jar files
       ================================================================= -->

  <target name="build" depends="init"
          description="builds the jars">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="bld.all" />
  </target>

  <target name="clean.build" depends="clean"
          description="cleans then builds the jars">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="bld.all" />
  </target>

  <!-- =================================================================
       The "build.freebusy.if" target conditionally builds the freebusy jar files
       ================================================================= -->

  <target name="build.freebusy.if" depends="init"
          description="builds the jars" if="org.bedework.qs.build.freebusy" >
    <antcall inheritrefs="true" target="build.freebusy" />
  </target>

  <target name="clean.freebusy.if" depends="init" if="org.bedework.qs.build.freebusy" >
  </target>

  <!-- =================================================================
       The "XXX.caldav.if" target conditionally executes the caldav targets
       ================================================================= -->

  <target name="build.caldav.if" depends="init"
          description="builds the jars" if="org.bedework.qs.build.caldav" >
    <antcall inheritrefs="true" target="build.caldav" />
  </target>

  <target name="clean.caldav.if" depends="init"
          description="cleans jars" if="org.bedework.qs.build.caldav" >
    <antcall inheritrefs="true" target="clean.caldav" />
  </target>

  <target name="build.caldavTest.if" depends="init"
          description="builds the jars" if="org.bedework.qs.build.caldav" >
    <antcall inheritrefs="true" target="build.caldavTest" />
  </target>

  <target name="clean.caldavTest.if" depends="init"
          description="cleans jars" if="org.bedework.qs.build.caldav" >
    <antcall inheritrefs="true" target="clean.caldavTest" />
  </target>

  <!-- =================================================================
       The "XXX.webdav.if" target conditionally executes the webdav targets
       (needed for caldav)
       ================================================================= -->

  <target name="build.webdav.if" depends="init"
          description="builds the jars" if="org.bedework.qs.build.caldav" >
    <antcall inheritrefs="true" target="build.webdav" />
  </target>

  <target name="clean.webdav.if" depends="init"
          description="cleans jars" if="org.bedework.qs.build.caldav" >
    <antcall inheritrefs="true" target="clean.webdav" />
  </target>

  <!-- =================================================================
       The "deploy" target builds and deploys the applications
       ================================================================= -->

  <target name="deploy" depends="build,build.dumprestore,build.webdav.if,build.caldav.if,build.freebusy.if"
          description="builds and deploys the applications">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="deploy.nobuild" />
  </target>

  <target name="deploy.debug" depends="build,build.dumprestore,build.webdav.if,build.caldav.if,build.caldavTest.if,build.freebusy.if"
          description="builds and deploys the applications">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="deploy.debug.nobuild" />
  </target>

  <!-- =================================================================
       The "clean.deploy" target cleans, builds and deploys the applications
       ================================================================= -->

  <target name="clean.deploy" depends="clean,deploy" />

  <target name="clean.deploy.debug" depends="clean,deploy.debug" />

  <target name="clean" depends="init,clean.dumprestore,clean.webdav.if,clean.caldav.if,clean.caldavTest.if,clean.freebusy.if"
          description="Remove all generated files.">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="clean" />
  </target>

  <!-- =================================================================
       The "build.configured" target builds configured applications
       ================================================================= -->

  <target name="build.configured" depends="init"
          description="Build configured applications" >
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="build.configured" />
  </target>

  <target name="build.configured.debug" depends="init"
          description="Build configured applications" >
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="build.configured.debug" />
  </target>

  <target name="clean.build.configured" depends="clean"
          description="Build configured applications" >
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="build.configured" />
  </target>

  <target name="clean.build.configured.debug" depends="clean"
          description="Build configured applications" >
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="build.configured.debug" />
  </target>

  <!-- =================================================================
       dump and restore targets
       ================================================================= -->

  <target name="dumpdb" >
    <echo message="===============================================================" />
    <echo message=" use the zipped dump/restore utility to dump, restore or initialise" />
    <echo message=" the system The default build places it in the dist directory," />
    <echo message=" instructions for use are in the quickstart documentation" />
    <echo message="===============================================================" />
  </target>

  <target name="restoredb" depends="dumpdb"/>

  <target name="initdb" depends="dumpdb"/>

  <target name="tzconvert" depends="build"
          description="Convert timezones for use in bedework">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
         target="tzconvert" />
  </target>

  <target name="bld.config" depends="init"
          description="Build config and deploy module">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="bld.config" />
  </target>

  <!-- =================================================================
       Build and run the unit test suite
       ================================================================= -->

  <target name="bld.test" depends="init"
          description="Build and run tests">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
         target="bld.test" />
  </target>

  <target name="run.test" depends="init"
          description="Build and run tests">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
         target="run.test" />
  </target>

  <target name="run.test.debug" depends="init"
          description="Build and run tests">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
         target="run.test"  >
      <property name="org.bedework.debug" value="yes" />
    </ant>
  </target>

  <!-- Rebuild the http test suite only -->
  <target name="httptest" depends="init"
          description="Run httptest suite" >
    <input message="httptest may destroy this calendar db. Proceed with test"
           validargs="y,n"
           addproperty="do.httptest" />
    <condition property="do.abort">
      <equals arg1="n" arg2="${do.httptest}"/>
    </condition>
    <fail if="do.abort">httptest aborted by user.</fail>

    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="bld.httptest" />

    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="run.httptest" />
  </target>

  <!-- =================================================================
       Run the synchml test application
       ================================================================= -->

  <target name="synchmltest" depends="init"
          description="Run the synchml test application" >
    <input message="synchmltest may destroy this calendar db. Proceed with test"
           validargs="y,n"
           addproperty="do.synchmltest" />
    <condition property="do.abort">
      <equals arg1="n" arg2="${do.synchmltest}"/>
    </condition>
    <fail if="do.abort">synchmltest aborted by user.</fail>

    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="synchmltest" />
  </target>

  <!-- ======================== schema target =======================
       This builds the ddl from the hibernate schema
       ================================================================= -->

  <target name="schema" depends="init"
          description="Generate schema from mapping files">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="schema" />
  </target>

  <!-- ======================== javadoc target =======================
       ================================================================= -->

  <target name="javadoc" depends="init"
          description="Generate javadoc">
    <ant antfile="${calendar.build.file}" inheritrefs="true"
           target="javadoc" />
  </target>

  <!-- =================================================================
       The "hsqldb" target starts the hsqldb server
       ================================================================= -->

  <target name="hsqldb" depends="init"
          description="starts the hsqldb server">
    <echo message="Starting hsqldb"/>
    <java fork="true" dir="${basedir}" classname="org.hsqldb.Server">
      <classpath>
        <pathelement path="${org.bedework.hsqldb.dir}/lib/hsqldb.jar"/>
      </classpath>
      <arg value="-database"/>
      <arg value="${org.bedework.hsqldb.dir}/${org.bedework.hsqldb.dbname}"/>
      <arg value="-port"/>
      <arg value="8887"/>
    </java>
  </target>

  <target name="hsqldb-trace" depends="init"
          description="starts the hsqldb server">
    <echo message="Starting hsqldb"/>
    <java fork="true" dir="${basedir}" classname="org.hsqldb.Server">
      <classpath>
        <pathelement path="${org.bedework.hsqldb.dir}/lib/hsqldb.jar"/>
      </classpath>
      <arg value="-trace"/>
      <arg value="true"/>
      <arg value="-silent"/>
      <arg value="false"/>
      <arg value="-database"/>
      <arg value="${org.bedework.hsqldb.dir}/${org.bedework.hsqldb.dbname}"/>
      <arg value="-port"/>
      <arg value="8887"/>
    </java>
  </target>

  <target name="uportaldb" depends="init"
          description="starts the hsqldb server">
    <echo message="Starting hsqldb"/>
    <java fork="true" dir="${basedir}" classname="org.hsqldb.Server">
      <classpath>
        <pathelement path="${org.bedework.hsqldb.dir}/lib/hsqldb.jar"/>
      </classpath>
      <arg value="-database"/>
      <arg value="${org.bedework.hsqldb.dir}/${org.bedework.hsqldb.uportal2.dbname}"/>
      <arg value="-port"/>
      <arg value="9887"/>
    </java>
  </target>

  <!-- =================================================================
       The "hsqldb-test" target starts the hsqldb server for testing
       ================================================================= -->

  <target name="hsqldb-test" depends="init"
          description="starts the hsqldb server for testing">
    <echo message="Starting hsqldb for testing"/>
    <delete dir="${org.bedework.hsqldb.dbdir}" />

    <java fork="true" dir="${basedir}" classname="org.hsqldb.Server">
      <classpath>
        <pathelement path="${org.bedework.hsqldb.dir}/lib/hsqldb.jar"/>
      </classpath>
      <arg value="-database"/>
      <arg value="${org.bedework.hsqldb.dir}/${org.bedework.hsqldb.test.dbdir}/events"/>
      <arg value="-port"/>
      <arg value="8887"/>
    </java>
  </target>

  <target name="hsqldb-test-trace" depends="init"
          description="starts the hsqldb server for testing">
    <echo message="Starting hsqldb for testing"/>
    <delete dir="${org.bedework.hsqldb.dbdir}" />

    <java fork="true" dir="${basedir}" classname="org.hsqldb.Server">
      <classpath>
        <pathelement path="${org.bedework.hsqldb.dir}/lib/hsqldb.jar"/>
      </classpath>
      <arg value="-trace"/>
      <arg value="true"/>
      <arg value="-silent"/>
      <arg value="false"/>
      <arg value="-database"/>
      <arg value="${org.bedework.hsqldb.dir}/${org.bedework.hsqldb.test.dbdir}/events"/>
      <arg value="-port"/>
      <arg value="8887"/>
    </java>
  </target>

  <!-- =================================================================
       The "hsqldb-mngr" target runs the DatabaseManager class which
       provides a gui interface to the running hsqldb database.
       ================================================================= -->

  <target name="hsqldb-mngr" depends="init"
          description="Runs the DatabaseManager class which provides a
                       gui interface to the running hsqldb database">
    <echo message="Starting hsqldb DatabaseManager"/>
    <echo message="Select type: HSQL Database Engine Server"/>
    <echo message="Set the URL to jdbc:hsqldb:hsql://localhost:8887"/>
    <java fork="true" dir="${basedir}"
          classname="org.hsqldb.util.DatabaseManager">
      <classpath>
        <pathelement path="${org.bedework.hsqldb.dir}/lib/hsqldb.jar"/>
      </classpath>
    </java>
  </target>

  <!-- =================================================================
       The "tomcatstart" target starts Tomcat
       ================================================================= -->

  <target name="tomcatstart-locale" depends="init"
          description="starts the tomcat server">
    <input message="Enter language code: "
           addproperty="tomcat.locale" />

    <input message="Enter country code: "
           addproperty="tomcat.country" />

    <echo message="Starting Tomcat from ${org.bedework.appserver.dir}"/>
    <java fork="true" dir="${basedir}"
          classname="org.apache.catalina.startup.Bootstrap">
      <classpath>
        <pathelement path="${org.bedework.appserver.dir}/bin/bootstrap.jar"/>
      </classpath>
      <sysproperty key="catalina.home" value="${org.bedework.appserver.dir}"/>
      <!--jvmarg value="-Dcatalina.home=${tomcat.dir}"/-->
      <jvmarg value="-Duser.language=${tomcat.locale}"/>
      <jvmarg value="-Duser.country=${tomcat.country}"/>
      <!--
      <jvmarg value="-Dfile.encoding=ISO-8859-1"/>
      -->
      <arg value="start"/>
    </java>
  </target>

  <target name="tomcatstart" depends="init"
          description="starts the tomcat server">
    <echo message="Starting Tomcat from ${org.bedework.appserver.dir}"/>
    <java fork="true" dir="${basedir}"
          classname="org.apache.catalina.startup.Bootstrap">
      <classpath>
        <pathelement path="${org.bedework.appserver.dir}/bin/bootstrap.jar"/>
      </classpath>
      <sysproperty key="catalina.home" value="${org.bedework.appserver.dir}"/>
      <!--jvmarg value="-Dcatalina.home=${tomcat.dir}"/-->
      <jvmarg value="-Djava.net.preferIPv4Stack=true"/>
      <arg value="start"/>
    </java>
  </target>

  <target name="tomcatstart-profile" depends="init"
          description="starts the tomcat server with rpofiling">
    <echo message="Starting Tomcat from ${org.bedework.appserver.dir}"/>
    <java fork="true" dir="${basedir}"
          classname="org.apache.catalina.startup.Bootstrap">
      <classpath>
        <pathelement path="${org.bedework.appserver.dir}/bin/bootstrap.jar"/>
      </classpath>
      <sysproperty key="catalina.home" value="${org.bedework.appserver.dir}"/>
      <!--jvmarg value="-Dcatalina.home=${tomcat.dir}"/-->
      <jvmarg value="-Xrunyjpagent:cpu=times,onexit=cpu" />
      <jvmarg value="-Djava.net.preferIPv4Stack=true"/>
      <arg value="start"/>
    </java>
  </target>

  <target name="tomcatstart-profile-large" depends="init"
          description="starts the tomcat server with rpofiling">
    <echo message="Starting Tomcat from ${org.bedework.appserver.dir}"/>
    <java fork="true" dir="${basedir}"
          classname="org.apache.catalina.startup.Bootstrap">
      <classpath>
        <pathelement path="${org.bedework.appserver.dir}/bin/bootstrap.jar"/>
      </classpath>
      <sysproperty key="catalina.home" value="${org.bedework.appserver.dir}"/>
      <!--jvmarg value="-Dcatalina.home=${tomcat.dir}"/-->
      <jvmarg value="-Xms128m" />
      <jvmarg value="-Xmx630m" />
      <!--
      <jvmarg value="-XX:PermSize=128m" />
      <jvmarg value="-XX:MaxPermSize=128m" />
      -->
      <jvmarg value="-server" />
      <jvmarg value="-Xrunyjpagent:cpu=times,onexit=cpu" />
      <jvmarg value="-Djava.net.preferIPv4Stack=true"/>
      <arg value="start"/>
    </java>
  </target>

  <target name="tomcatstart-debug" depends="init"
          description="starts the tomcat server with remote debugging enabled">
    <echo message="Starting Tomcat from ${org.bedework.appserver.dir}"/>
    <java fork="true" dir="${basedir}"
          classname="org.apache.catalina.startup.Bootstrap">
      <classpath>
        <pathelement path="${org.bedework.appserver.dir}/bin/bootstrap.jar"/>
      </classpath>
      <sysproperty key="catalina.home" value="${org.bedework.appserver.dir}"/>
      <!--jvmarg value="-Dcatalina.home=${tomcat.dir}"/-->
      <jvmarg value="-Djava.net.preferIPv4Stack=true"/>
      <jvmarg value="-Xdebug"/>
      <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
      <arg value="start"/>
    </java>
  </target>

  <!-- This target is for use when sync4j is installed -->
  <target name="tomcatstart-sync4j" depends="init"
          description="starts the tomcat server with sync4j">
    <echo message="Starting Tomcat 5.0.16 with sync4j"/>
    <java fork="true" dir="${basedir}"
          classname="org.apache.catalina.startup.Bootstrap">
      <classpath>
        <pathelement path="${org.bedework.appserver.dir}/bin/bootstrap.jar"/>
      </classpath>
      <sysproperty key="catalina.home" value="${org.bedework.appserver.dir}"/>
      <!--jvmarg value="-Dcatalina.home=${tomcat.dir}"/-->
      <jvmarg value="-Dsync4j.home=${sync4j.dir}"/>
      <arg value="start"/>
    </java>
  </target>

  <!-- =================================================================
       The "tomcatstop" target stops Tomcat cleanly
       ================================================================= -->

  <target name="tomcatstop" depends="init">
    <echo message="Stopping Tomcat 5.0.16"/>
    <java fork="true" dir="${basedir}"
          classname="org.apache.catalina.startup.Bootstrap">
      <classpath>
        <pathelement path="${org.bedework.appserver.dir}/bin/bootstrap.jar"/>
      </classpath>
      <sysproperty key="catalina.home" value="${org.bedework.appserver.dir}"/>
      <!--jvmarg value="-Dcatalina.home=${tomcat.dir}"/-->
      <arg value="stop"/>
    </java>
  </target>
</project>
