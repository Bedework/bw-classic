<?xml version="1.0"?>

<!-- ===================================================================
     Default public events web application deployer
     =================================================================== -->

<project name="bwpublic.deploy" default="deploy" >
  <import file="${org.bedework.deployment.base}/deployprops.xml" />

  <target name="init" >
    <!-- and define some properties based on those -->
    <property name="app.war.file"
              location="${dist.home}/${propval.app.war.name}.war" />

    <dirname property="this.dir" file="${ant.file}"/>

    <property name="app.sou.dir" location="${org.bedework.deploy.app.sou}" />

    <!-- Flag as struts -->
    <property name="org.bedework.strutsapp" value="true" />

    <!-- Properties that differ from the personal client -->
    <!--
    <property name="app.web.xml"
              value="${app.sou.dir}/war/WEB-INF/web.xml" />
              -->

    <!-- This should be in the config stuff -->
    <property name="propval.directory.browsing.disallowed"
              value="${app.directory.browsing.disallowed}" />

    <property name="propval.app.guestmode" value="true" />

    <property name="app.resources.dir"
              location="${this.dir}/resources" />
  </target>

  <!-- =================================================================
       The "deploy" target first builds a configured component then copies
       all required files to the appropriate servlet container directories.

       Currently this only works for the quickstart distribution.
       For example, it does not handle deploying into jboss and copying
       resource files (images, stylesheets) to external locations.
       ================================================================= -->

  <target name="deploy" depends="init,build.configured" >
    <!-- First copy the resources into the server -->

    <delete dir="${org.bedework.appserver.dir}/${propval.app.resources.dir}.${propval.app.cal.suite}" />
    <copy todir="${org.bedework.appserver.dir}/${propval.app.resources.dir}.${propval.app.cal.suite}">
      <fileset dir="${app.resources.dir}/demoskins/${propval.app.cal.suite}" />
    </copy>

    <echo message="***************************************************************" />
    <echo message="Deploying standalone app ${app.war.file} into ${org.bedework.appserver.dir}/${propval.app.deploy.dir}" />
    <echo message="***************************************************************" />

    <!-- Delete expanded version -->
    <delete dir="${org.bedework.appserver.dir}/${propval.app.deploy.dir}/${propval.app.war.name}" />

    <!-- copy the war file. -->
    <copy todir="${org.bedework.appserver.dir}/${propval.app.deploy.dir}"
          file="${app.war.file}"
          overwrite="yes" />

    <!-- Delete the quickstart context def -->
    <delete file="${org.bedework.appserver.dir}/conf/Catalina/localhost/${propval.app.war.name}.xml" />

    <antcall target="deploy.uportal2" inheritRefs="true" />
  </target>

  <target name="deploy.uportal2" if="org.bedework.build.for.uportal2" >
    <ant antfile="${org.bedework.deploy.type.dir}/${propval.app.portal.platform}/build.xml"
         inheritrefs="true" target="deploy" />
  </target>

  <target name="build.configured" depends="init" >
    <!-- ===============================================================
         Libraries for this application
         =============================================================== -->

    <!-- from  the lib directory -->
    <fileset id="app.lib.files" dir="${org.bedework.empty.dir}" >
    </fileset>

    <!-- from  the bin directory -->
    <fileset id="app.bin.files" dir="${bin.home}" >
      <include name="bw-webcommon*.jar" />
      <include name="bw-webclient*.jar" />
    </fileset>

    <!-- from  the temp jars directory -->
    <fileset id="app.temp.lib.files" dir="${org.bedework.temp.jars}" >
      <include name="${org.bedework.webclient.jar.name}" />
    </fileset>

    <!-- ===============================================================
         Build the war
         =============================================================== -->

    <ant antfile="${buildwar}" inheritRefs="true" target="build" />
  </target>
</project>

