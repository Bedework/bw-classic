<?xml version="1.0"?>

<!-- ============= Calendar db interface test classes ==================
     This is the build.xml for the bedework calendar dump restore.

     Authors: Mike Douglass   douglm@rpi.edu
     =================================================================== -->

<project name="cal.db.dumprestore" default="init" >
  <property name="base.name" value="dumprestore"/>

  <target name="init">
    <dirname property="this.dir" file="${ant.file}"/>
    <property name="source.home" location="${this.dir}/src"/>

    <property name="dump.class" value="org.bedework.dumprestore.dump.Dump" />
    <property name="restore.class" value="org.bedework.dumprestore.restore.Restore" />

    <property name="org.bedework.dump.jdbcdriver.jar"
              value="${appserver.jdbcdriver.jar}" />

    <property name="dumprestore.run.base"
              location="${org.bedework.temp.home}/dumprestore"/>
    <property name="dumprestore.run.resources"
              location="${org.bedework.temp.home}/dumprestore/resources"/>
    <delete dir="${dumprestore.run.base}" />
    <mkdir dir="${dumprestore.run.base}" />
    <mkdir dir="${dumprestore.run.resources}" />

    <copy todir="${dumprestore.run.resources}">
      <fileset dir="${org.bedework.core.base}/resources/properties" />
    </copy>
    <copy todir="${dumprestore.run.resources}">
      <fileset dir="${org.bedework.core.base}/resources/hbms" />
    </copy>

    <path id="lib.dump.class.path">
      <fileset dir="${org.bedework.temp.jars}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${org.bedework.default.lib}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${hibernate.jars.dir}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${digester.dir}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${struts.dir}">
        <include name="*.jar"/>
      </fileset>

      <!-- local jdbc drivers -->
      <fileset dir="${org.bedework.jdbc.lib}">
        <include name="*.jar"/>
      </fileset>

      <!-- Include the quickstart jdbc driver -->
      <pathelement location="${hsqldb.jdbcdriver.jar}"/>

      <!-- add any properties we might want -->
      <pathelement location="${dumprestore.run.resources}" />
      <pathelement location="${org.bedework.dumprestore.base}/properties" />

      <!-- add the mapping file from appsuite -->
      <pathelement
          location="${org.bedework.appsuite.base}/resources/properties" />
      <pathelement
          location="${dumprestore.run.base}/resources/hibernate.properties"/>
    </path>

    <path id="lib.restore.class.path">
      <fileset dir="${org.bedework.temp.jars}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${org.bedework.default.lib}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${hibernate.jars.dir}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${digester.dir}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${struts.dir}">
        <include name="*.jar"/>
      </fileset>

      <!-- local jdbc drivers -->
      <fileset dir="${org.bedework.jdbc.lib}">
        <include name="*.jar"/>
      </fileset>

      <!-- Include the quickstart jdbc driver -->
      <pathelement location="${hsqldb.jdbcdriver.jar}"/>

      <!-- add any properties we might want -->
      <pathelement location="${dumprestore.run.resources}" />
      <pathelement location="${org.bedework.dumprestore.base}/properties" />

      <!-- add the mapping file from appsuite -->
      <pathelement
          location="${org.bedework.appsuite.base}/resources/properties" />
      <pathelement
          location="${dumprestore.run.base}/resources/hibernate.properties"/>
    </path>
  </target>

  <target name="build"
          depends="init"
          description="Build calendar dumprestore jars">
    <!-- ==================== Sources and classes ====================== -->

    <fileset id="base.java.sources" dir="${source.home}" >
      <include name="org/bedework/dumprestore/**/*.java"/>
    </fileset>

    <patternset id="base.class.patternset">
      <include name="org/bedework/dumprestore/**/*.class"/>
    </patternset>

    <!-- ==================== Compilation Classpath ==================== -->

    <path id="compile.classpath">
      <pathelement location="${log4j.jar}"/>
      <pathelement location="${ical4j.jar}"/>
      <pathelement location="${digester.jar}"/>
      <pathelement location="${hibernate.jar}"/>
      <pathelement location="${org.bedework.calfacadeshared.jar}"/>
      <pathelement location="${org.bedework.calsvci.jar}"/>
      <pathelement location="${org.bedework.calcore.jar}"/>
      <pathelement location="${org.bedework.access.jar}"/>
      <pathelement location="${org.bedework.appcommon.jar}"/>
      <pathelement location="${org.bedework.ical.jar}"/>
    </path>

    <!-- ==================== Build Target ============================= -->

    <property name="build.jar.file" location="${org.bedework.dumprestore.jar}" />

    <ant antfile="${buildjar}" inheritRefs="true" target="build" />
  </target>

  <target name="dumpdb" depends="init"
          description="Run bedework db dump app">

    <echo file="${dumprestore.run.base}/resources/hibernate.properties">
hibernate.query.substitutions true 'T', false 'F', yes 'Y', no 'N'
hibernate.dialect=${org.bedework.dump.arg.hibernate.dialect}
hibernate.connection.driver_class=${org.bedework.dump.arg.jdbcdriver}
hibernate.connection.username=${org.bedework.dump.arg.jdbcid}
hibernate.connection.password=${org.bedework.dump.arg.jdbcpw}
hibernate.connection.url=${org.bedework.dump.arg.jdbcurl}
    </echo>

    <pathconvert property="lib.txt.classpath"
                 refid="lib.dump.class.path"
                 targetos="unix"  pathsep=":" />

    <echo message="cp: ${lib.txt.classpath}" />

    <echo message=" " />
    <echo message="dumping to ${org.bedework.dump.arg.dumpfile}" />

    <java  classname="${dump.class}"
          fork="true"
          failonerror="true">
      <classpath refid="lib.dump.class.path" />
      <arg value="${org.bedework.dump.arg.debug}" />
      <arg value="-f" />
      <arg value="${org.bedework.dump.arg.dumpfile}" />
      <!--
      <arg value="-Djava.endorsed.dir=${org.bedework.default.lib}/endorsed"/>-->
    </java>
  </target>

  <target name="restoredb" depends="init"
          description="Run Bedework db restore app">
    <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" />
    <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" />
    <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" />
    <echo message="!!" />
    <echo message="!! Restoring will change your database." />
    <echo message="!!" />
    <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" />
    <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" />
    <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" />

    <!-- default onlyusers to ignore -->
    <property name="org.bedework.onlyusers" value="*" />

    <input message="Proceed with restore?"
           validargs="y,n"
           addproperty="do.fix" />
    <condition property="do.abort">
      <equals arg1="n" arg2="${do.fix}"/>
    </condition>
    <fail if="do.abort">restore aborted by user.</fail>

    <echo file="${dumprestore.run.base}/resources/hibernate.properties">
hibernate.query.substitutions true 'T', false 'F', yes 'Y', no 'N'
hibernate.dialect=${org.bedework.restore.arg.hibernate.dialect}
hibernate.connection.driver_class=${org.bedework.restore.arg.jdbcdriver}
hibernate.connection.username=${org.bedework.restore.arg.jdbcid}
hibernate.connection.password=${org.bedework.restore.arg.jdbcpw}
hibernate.connection.url=${org.bedework.restore.arg.jdbcurl}
#
# Here for better debugging
#
hibernate.jdbc.batch_size=0
    </echo>

    <pathconvert property="lib.txt.classpath"
                 refid="lib.restore.class.path"
                 targetos="unix"  pathsep=":" />

    <echo message="cp: ${lib.txt.classpath}" />

    <echo message=" " />
    <echo message="restoring from ${org.bedework.restore.arg.dumpfile}" />

    <java  classname="${restore.class}"
          fork="true"
          failonerror="true">
      <classpath refid="lib.restore.class.path" />
      <arg value="${org.bedework.restore.arg.debug}" />
      <arg value="-supergroup" />
      <arg value="${org.bedework.restore.supergroup}" />
      <arg value="-f" />
      <arg value="${org.bedework.restore.arg.dumpfile}" />
      <arg value="${org.bedework.restore.arg.from2p3px}" />
      <arg line="${org.bedework.restore.arg.defaultpubliccal}" />
      <arg line="${org.bedework.restore.arg.timezones}" />

      <arg value="-sysname" />
      <arg value="${org.bedework.global.system.name}" />
      <arg value="-tzid" />
      <arg value="${org.bedework.syspar.tzid}" />
      <arg value="-sysid" />
      <arg value="${org.bedework.syspar.systemid}" />

      <arg value="-publiccalroot" />
      <arg value="${org.bedework.syspar.public.calroot}" />
      <arg value="-usercalroot" />
      <arg value="${org.bedework.syspar.user.calroot}" />
      <arg value="-defusercal" />
      <arg value="${org.bedework.syspar.default.user.calendar}" />
      <arg value="-deftrashcal" />
      <arg value="${org.bedework.syspar.default.trash.calendar}" />
      <arg value="-definbox" />
      <arg value="${org.bedework.syspar.default.user.inbox}" />
      <arg value="-defoutbox" />
      <arg value="${org.bedework.syspar.default.user.outbox}" />
      <arg value="-defuview" />
      <arg line="${org.bedework.syspar.default.user.view}" />

      <arg value="-pu" />
      <arg value="${org.bedework.syspar.public.user}" />

      <arg value="-onlyusers" />
      <arg value="${org.bedework.onlyusers}" />

      <arg value="-httpconnsperuser" />
      <arg value="${org.bedework.syspar.http.connections.peruser}" />
      <arg value="-httpconnsperhost" />
      <arg value="${org.bedework.syspar.http.connections.perhost}" />
      <arg value="-httpconns" />
      <arg value="${org.bedework.syspar.http.connections}" />

      <arg value="-userauthClass" />
      <arg value="${org.bedework.syspar.userauthclass}" />
      <arg value="-mailerClass" />
      <arg value="${org.bedework.syspar.mailerclass}" />
      <arg value="-admingroupsClass" />
      <arg value="${org.bedework.syspar.admingroupsclass}" />
      <arg value="-usergroupsClass" />
      <arg value="${org.bedework.syspar.usergroupsclass}" />
      <jvmarg value="-mx128m" />
      <jvmarg value="-ms128m" />
      <jvmarg value="-Xrunyjpagent:cpu=times,onexit=cpu" />
      <!--
      <arg value="-Djava.endorsed.dir=${org.bedework.default.lib}/endorsed"/>-->
    </java>
  </target>

  <!-- Initdb is just restoredb with the input data file property set in
       advance of loading any user defined properties.
       -->
  <target name="initdb" depends="init"
          description="Run bedework db restore app to initialise db">
    <property name="org.bedework.restore.arg.dumpfile"
              location="${org.bedework.dumprestore.base}/resources/initbedework.xml"/>
    <antcall target="restoredb" inheritrefs="true" />
  </target>

  <!-- nousers is just restoredb with a list of users to preserve. All others will be stripped out.
       -->
  <target name="restoredb-nousers" depends="init"
          description="Run bedework db restore app to initialise db">
    <property name="org.bedework.onlyusers"
              value="public-user,caladmin,douglm,agrp_cct,agrp_arc,agrp_Admissions,agrp_HSS,agrp_IACS,agrp_Arch,agrp_OoC,agrp_MANE,agrp_health,agrp_ccc,agrp_hr,agrp_physics,agrp_advance,agrp_provost,agrp_empac,agrp_it,agrp_soe,agrp_lally,agrp_CogSci,agrp_alum,agrp_parking,agrp_Athletics,agrp_construct,agrp_union,agrp_Library,agrp_chemistry,agrp_ItOps,agrp_Arts,agrp_President,agrp_facilities,agrp_CDC,agrp_fye,agrp_ECSE,agrp_NetTel,agrp_Math,agrp_dses,agrp_compsci,agrp_Economics,agrp_govrel,agrp_CHME,agrp_Bookstore,agrp_mse,agrp_Diversity,agrp_OriginsOfLife,agrp_doso,agrp_CEE,agrp_SoS,agrp_CreditUnion,agrp_ResLife,agrp_Purchasing,agrp_LRC,agrp_STS,agrp_ComputerStore,agrp_catering,agrp_CIUE,agrp_Biology,agrp_PublicSafety,agrp_UnionClubs,agrp_cpfd,agrp_FYS,agrp_SRFS,agrp_EES,agrp_ALAC,agrp_SCOREC,agrp_CFES,agrp_CATS,agrp_LLC,agrp_Archer,agrp_OMSA,agrp_Nanotech,agrp_BioMed,agrp_CBIS" />
    <antcall target="restoredb" inheritrefs="true" />
  </target>
</project>
