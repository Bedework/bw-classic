<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

  <!-- =====================================================================
       Synch engine configuration
       
       Eventually this data will migrate into a database to allow for dynamic 
       persistent configuration of the system. Many of these properties can be
       changed via the jmx console but currently the chanegs will not survive
       a restart.
       ===================================================================== -->
  <bean id="synchConfig" 
        class="org.bedework.synch.SynchConfig">
    <!-- Size of synchling pool. This effectively limits the number of 
         concurrent threads processing synch actions  --> 
    <property name="synchlingPoolSize"
              value="20" />

    <!-- timeout in millisecs for synchling pool. Processes waiting for a free  
         synchling will timeout after this period and fail  --> 
    <property name="synchlingPoolTimeout"
              value="5000" />

    <!-- How often we retry a synch when one of the targets goes missing.
         It's possible a file target might get deleted and replaced rather than
         updated. Also changing access might make a collection disappear for a 
         while. --> 
    <property name="missingTargetRetries"
              value="10" />

    <!-- callback. Comment out for no service. MUST end in "/" -->
    <property name="callbackURI"
              value="http://128.113.124.225:8080/synch/" />
              
    <!-- Path to keystore - comment out to use default. Used for ssl etc. -->          
    <property name="keystore"
              value="@APPSERVER-DATA-DIR@/synchcerts" />

    <!-- Public/private key locations -->
    <property name="privKeys"
              value="@DATA_DIR@/privkeys" />
    <property name="pubKeys"
              value="@DATA_DIR@/pubkeys" />

    <!-- Timezone server location -->
    <property name="timezonesURI"
              value="http://localhost:8080/tzsvr" />

    <!-- The table of connectors we define. Each has an id, the key and a 
         value which is the class of the connector for that id. The ids must be
         unique, but we may have more than one occurrence of connectors with the
          class.
          
          For example we could have two bedework connectors to allow synch
          between the local bedework and some other remote bedework.
     -->               
    <property name="connectors">
      <map>
        <!-- manager is a special connector which provides a way of
             communicating with the synch engine. There must always be
             one, and only one, of this class. -->
        <entry key="manager" 
               value="org.bedework.synch.cnctrs.manager.SynchConnector" />

        <!-- An exchange connector -->               
        <entry key="exdemo" 
               value="org.bedework.synch.cnctrs.exchange.ExchangeConnector" />

        <!-- A local bedework connector. This handles connections to the local
             bedework system. This name is configured in to bedework so that
             it can locate its own connections. 
          -->               
        <entry key="localBedework" 
               value="org.bedework.synch.cnctrs.bedework.BedeworkConnector" />

        <!-- A file connector -->               
        <entry key="read-only-file" 
               value="org.bedework.synch.cnctrs.file.FileConnector" />
      </map>
    </property>
  </bean>

  <!-- The connector "exdemo" will load the following config - 
       the suffix "ExchangeConfig" is appended to the connector id -->
  <bean id="exdemoExchangeConfig" 
        class="org.bedework.synch.cnctrs.exchange.ExchangeConnectorConfig">
    <property name="readOnly" value="false" />

    <property name="trustLastmod" value="true" />

    <!-- location of the WSDL - modified to include server element 
         This corresponds to the wsdl deploy location defined in the
         build properties file.
    -->
    <property name="exchangeWSDLURI"
              value="http://localhost:8080/wsdls/exchange/Services.wsdl" />
              <!-- 
    <property name="props">
      <props>
        <prop key="x1">y1</prop>
        <prop key="x2">y2</prop>
      </props>
    </property>
     -->
  </bean>
  
  <!-- The connector "localBedework" will load the following config - 
       the suffix "BedeworkConfig" is appended to the connector id -->
  <bean id="localBedeworkBedeworkConfig" 
        class="org.bedework.synch.cnctrs.bedework.BedeworkConnectorConfig">
    <property name="readOnly" value="false" />

    <property name="trustLastmod" value="true" />

    <!-- location of the WSDL for the remote web service 
         This corresponds to the wsdl deploy location defined in the
         build properties file.
    -->
    <property name="bwWSDLURI"
              value="http://localhost:8080/wsdls/synch/wssvc.wsdl" />
              
    <!-- seconds before retry on failure  --> 
    <property name="retryInterval"
              value="10" />
              
    <!-- seconds before we ping just to say we're still around --> 
    <property name="keepAliveInterval"
              value="300" />
  </bean>
  
  <!-- The connector "read-only-file" will load the following config - 
       the suffix "FileConfig" is appended to the connector id -->
  <bean id="read-only-fileFileConfig" 
        class="org.bedework.synch.cnctrs.file.FileConnectorConfig">
    <property name="readOnly" value="true" />

    <property name="trustLastmod" value="false" />

    <!-- seconds  --> 
    <property name="minPoll" value="15" />
  </bean>
</beans>
