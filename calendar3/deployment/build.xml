<?xml version="1.0"?>

<!-- ===================== Deployment build file =======================
     This directory and the files within it are to be part of the config
     and deployment process.

     A number of properties of the form org.bedework.install.XXX will be
     defined, each indicating that a particualr component is to be deployed.

     Targets below will be executed only if that property is defined.

     Adding a new configuration, e.g. a different portal platform, requires
     the steps:
        Create a subdirectory in each components subdirectory,
        e.g.  webadmin/myportal

        Create any other required resource directories and resources and
        create a build.xml file to configure and package the component(s).

        Update the config program to load, save and display the new
        properties for that configuration.

        Add an antcall for each component and a corresponding target

     Authors: Mike Douglass   douglm@rpi.edu
     =================================================================== -->

<project name="deploy.bedework" default="init">
  <target name="init" >
    <!-- default to debug off -->
    <property name="app.debug.val" value="0" />

    <!-- set this for the war builds -->
    <dirname property="app.root.dir" file="${ant.file}"/>

    <!-- ==================== config properties =========================
    <property name="org.bedework.config.properties"
              location="${org.bedework.config.base}/configs/${org.bedework.clone.name}.properties" />

    <echo message="==========================================================" />
    <echo message="Use clone properties ${org.bedework.config.properties}" />
    <loadproperties
          srcFile="${org.bedework.config.properties}" >
      <filterchain>
        <expandproperties/>
      </filterchain>
    </loadproperties>
    -->
  </target>

  <target name="build.configured" depends="init" >
    <!-- Clean up before we start -->
    <delete dir="${org.bedework.temp.wars.home}" />

    <antcall target="build.standalone.apps" inheritrefs="true" />

    <antcall target="build.portal.apps" inheritrefs="true" />

    <antcall target="build.j2ee.apps" inheritrefs="true" />

    <!-- dump restore - always built (until we have a choice of windows/unix. -->
    <ant antfile="${org.bedework.deployment.base}/dumprestore/shellscr/build.xml"
         inheritrefs="true" target="build.configured" />
  </target>

  <!-- =================================================================
       Targets called by the build.configured target. Each is conditional on a
       config property and each executes a build file in a subdirectory of
       this component.
       ================================================================= -->

  <target name="build.standalone.apps" if="org.bedework.global.build.standalone.app" >
    <!-- ======================= webconfig - only standalone ================= -->
    <ant antfile="${org.bedework.deployment.base}/webconfig/webapp/build.xml"
         inheritrefs="true" target="build.configured" />

    <build.configured.apps kind="webapp" />
  </target>

  <target name="build.portal.apps" if="org.bedework.global.portal.platform" >
    <build.configured.apps kind="${org.bedework.global.portal.platform}" />
  </target>

  <target name="build.j2ee.apps" if="org.bedework.global.j2ee.platform" >
    <build.configured.apps kind="${org.bedework.global.j2ee.platform}" />
  </target>

  <!-- =================================================================
                         The deploy target.
       ================================================================= -->

  <target name="deploy" depends="init" >
    <!-- Clean up before we start -->
    <delete dir="${org.bedework.temp.wars.home}" />

    <antcall target="deploy.standalone.apps" inheritrefs="true" />

    <antcall target="deploy.portal.apps" inheritrefs="true" />

    <antcall target="deploy.j2ee.apps" inheritrefs="true" />

    <!-- copy an index file that sends you to the applications -->
    <copy file="${app.root.dir}/resources/html/cal.html"
          todir="${webapp.root.dir}"/>

    <!-- copy libs that the application server needs -->
    <antcall target="deploy.appserver.jdbcdriver" inheritrefs="true" />
    <antcall target="deploy.appserver.javatools" inheritrefs="true" />
  </target>

  <!-- =================================================================
       Targets called by the deploy target. Each is conditional on a
       config property and each executes a build file in a subdirectory of
       this component.
       ================================================================= -->

  <target name="deploy.standalone.apps" if="org.bedework.global.build.standalone.app" >
    <!-- ======================= webconfig - only standalone ================= -->
    <ant antfile="${org.bedework.deployment.base}/webconfig/webapp/build.xml"
         inheritrefs="true" target="deploy" />

    <deploy.apps kind="webapp" />
  </target>

  <target name="deploy.portal.apps" if="org.bedework.global.portal.platform" >
    <deploy.apps kind="${org.bedework.global.portal.platform}" />
  </target>

  <target name="deploy.j2ee.apps" if="org.bedework.global.j2ee.platform" >
    <deploy.apps kind="${org.bedework.global.j2ee.platform}" />
  </target>

  <!-- The cp.xalan task conditionally copies the xalan.jar file, if
       necessary -->
  <target name="cp.xalan" if="xalan.in.tomcat.common.endorsed">
    <copy file="${org.bedework.default.lib}/xalan.jar"
          todir="${appserver.endorsed.dir}"/>
  </target>

  <target name="deploy.appserver.jdbcdriver"
          if="appserver.jdbcdriver.jar" >
    <!-- copy jdbc jar so datasources work -->
    <copy todir="${appserver.lib.dir}" file="${appserver.jdbcdriver.jar}"/>
  </target>

  <target name="deploy.appserver.javatools"
          if="java.tools.jar" >
    <!-- copy tools jar so jsps work -->
    <copy todir="${appserver.lib.dir}" file="${java.tools.jar}"/>
  </target>

  <!-- =================================================================
       Targets called by the build.configured target. Each is conditional on a
       config property and each executes a build file in a subdirectory of
       this component.
       ================================================================= -->
  <macrodef name="build.configured.apps">
      <attribute name="kind" />
    <sequential>
      <!-- ======================= webadmin ================= -->
      <ant antfile="${org.bedework.deployment.base}/webadmin/@{kind}/build.xml"
           inheritrefs="true" target="build.configured" />

      <!-- ======================= pubevents ================= -->
      <ant antfile="${org.bedework.deployment.base}/webpublic/@{kind}/build.xml"
           inheritrefs="true" target="build.configured" />

      <!-- ======================= personal ================= -->
      <ant antfile="${org.bedework.deployment.base}/webuser/@{kind}/build.xml"
           inheritrefs="true" target="build.configured" />

      <!-- ======================= caldav - public ================= -->
      <ant antfile="${org.bedework.deployment.base}/publiccaldav/@{kind}/build.xml"
           inheritrefs="true" target="build.configured" />

      <!-- ======================= caldav - user ================= -->
      <ant antfile="${org.bedework.deployment.base}/usercaldav/@{kind}/build.xml"
           inheritrefs="true" target="build.configured" />

      <!-- ======================= termination tasks ================= -->
      <ant antfile="${org.bedework.deployment.base}/termination/@{kind}/build.xml"
           inheritrefs="true" target="build.configured" />
    </sequential>
  </macrodef>

  <macrodef name="deploy.apps">
      <attribute name="kind" />
    <sequential>
      <!-- ======================= webadmin ================= -->
      <ant antfile="${org.bedework.deployment.base}/webadmin/@{kind}/build.xml"
           inheritrefs="true" target="deploy" />

      <!-- ======================= pubevents ================= -->
      <ant antfile="${org.bedework.deployment.base}/webpublic/@{kind}/build.xml"
           inheritrefs="true" target="deploy" />

      <!-- ======================= personal ================= -->
      <ant antfile="${org.bedework.deployment.base}/webuser/@{kind}/build.xml"
           inheritrefs="true" target="deploy" />

      <!-- ======================= caldav - public ================= -->
      <ant antfile="${org.bedework.deployment.base}/publiccaldav/@{kind}/build.xml"
           inheritrefs="true" target="deploy" />

      <!-- ======================= caldav - user ================= -->
      <ant antfile="${org.bedework.deployment.base}/usercaldav/@{kind}/build.xml"
           inheritrefs="true" target="deploy" />

      <!-- ======================= termination tasks ================= -->
      <ant antfile="${org.bedework.deployment.base}/termination/@{kind}/build.xml"
           inheritrefs="true" target="deploy" />
    </sequential>
  </macrodef>
</project>
